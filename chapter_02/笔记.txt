处理数据：
    面向对象编程（OOP)的本质是设计并扩展自己数据类型。设计自己的数据类型就是让类型与数据匹配；
    设计自己的数据类型的前置条件： 理解C++的内置类型；
      内置的c++类型分为两组： 基本类型和复合类型；
      基本类型：整数和浮点数；
      基本数据类型的变体、变量、算术运算、类型转换；
    
    简单变量：
        变量名
            简单的c++命名规则：
                    在名称中只能使用字母字符、数字和下划线（_);
                    名称的第一个字符不能是数字
                    区分大写字符和小写字符
                    不能将c++关键字用作名称
                    以两个下划线或下划线和大写字母打头的名称被保留给实现（编译器及其使用的资源）使用，以一个下划线开头的名称被保留给实现，用作全局标识符；
                    c++对于名称的长度没有限制，名称中的所有字符都有意义，但有些平台有长度限制；
    整型： 
        c++的基本整型，按宽度递增的顺序排列，依次是signed or unsigned （char、short、int、long和c++11新增的 long long )
        c++对数据类型的宽度提供了一个灵活的标准： -- 它确保了最小宽度
                short至少16位；
                int至少和short一样长；
                long至少32位，且至少与int一样长；
                long long 至少64位，至少与long一样长；
        c++对字节的定义：c++的字节至少能够容纳实现的基本字符集的相邻位组成，也就是说，可能取值的数目必须等于或超过字符数目。就会出现当使用国际编码标准时，unicode时有可能16位或则32位表示1个字节；
        
